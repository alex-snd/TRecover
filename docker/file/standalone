# Stage 1: Builder/Compiler
FROM python:3.8-slim AS builder

# Copy necessary data
COPY ./src /workspace/src
COPY ./setup.py /workspace/setup.py
COPY ./inference /workspace/inference
COPY ./requirements /workspace/requirements

# Install packages
RUN apt update && \
    apt install --no-install-recommends -y build-essential gcc && \
	pip install --no-cache-dir -r /workspace/requirements/docker/standalone.txt  && \
    pip install -e /workspace


# Stage 2: Runtime
FROM python:3.8-slim AS runtime

ENV CUDA ${CUDA:-True}
ENV CELERY_BROKER ${CELERY_BROKER:-pyamqp://guest@localhost:5672}
ENV CELERY_BACKEND ${CELERY_BACKEND:-redis://localhost:6379}
ENV CELERY_WORKERS ${CELERY_WORKERS:-1}
ENV STREAMLIT_PORT ${STREAMLIT_PORT:-8000}
ENV FASTAPI_HOST 0.0.0.0
ENV FASTAPI_PORT ${FASTAPI_PORT:-8001}
ENV FASTAPI_WORKERS ${FASTAPI_WORKERS:-1}

COPY --from=builder /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin
COPY --from=builder ./workspace ./workspace

CMD celery -A workspace.src.app.api.backend.celeryapp worker -l INFO -c ${CELERY_WORKERS} & \
    uvicorn workspace.src.app.api.zreaderapi:api --host "0.0.0.0" --port ${FASTAPI_PORT} --workers ${FASTAPI_WORKERS} & \
    streamlit run /workspace/src/app/api/dashboard.py --server.address "0.0.0.0" --server.port ${STREAMLIT_PORT} \
    --theme.backgroundColor "#E7EAD9" --theme.secondaryBackgroundColor "#DFE3D0" \
    --theme.primaryColor "#FF8068" --theme.textColor "#157D96" & \
    wait